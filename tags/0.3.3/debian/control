Source: sl
Section: libdevel
Priority: optional
Maintainer: Stig Brautaset <stig@brautaset.org>
Build-Depends: debhelper (>= 4.0.2), binutils (>= 2.14.90.0.7)
Standards-Version: 3.5.10

Package: libsl
Section: libs
Architecture: any
Depends: ${shlibs:Depends}
Description: a small and flexible linked list library
 `sl' is a fast and efficient generic linked list library.
 Instead of using container nodes with pointers to your data it
 uses a pointer to the next item directly in the datastructure
 you want to create lists (or stacks) of.
 .
 In addition to the significant memory savings this can offer to
 certain applications, this allows for very fast push and pop
 operations since there is no need to allocate/free memory for
 the container nodes. It also means that push cannot fail due to
 memory allocation failure for the container node.

Package: libsl-dbg
Section: libdevel
Architecture: any
Depends: ${shlibs:Depends}, libsl (= ${Source-Version})
Description: a small and flexible linked list library
 `sl' is a fast and efficient generic linked list library.
 Instead of using container nodes with pointers to your data it
 uses a pointer to the next item directly in the datastructure
 you want to create lists (or stacks) of.
 .
 In addition to the significant memory savings this can offer to
 certain applications, this allows for very fast push and pop
 operations since there is no need to allocate/free memory for
 the container nodes. It also means that push cannot fail due to
 memory allocation failure for the container node.
 .
 This package contains debug information.

Package: libsl-dev
Section: libdevel
Architecture: any
Depends: ${shlibs:Depends}, libsl (= ${Source-Version})
Recommends: libsl-dbg (= ${Source-Version})
Description: a small and flexible linked list library
 `sl' is a fast and efficient generic linked list library.
 Instead of using container nodes with pointers to your data it
 uses a pointer to the next item directly in the datastructure
 you want to create lists (or stacks) of.
 .
 In addition to the significant memory savings this can offer to
 certain applications, this allows for very fast push and pop
 operations since there is no need to allocate/free memory for
 the container nodes. It also means that push cannot fail due to
 memory allocation failure for the container node.
 .
 This package contains the header file, man pages and html 
 documentation; install this if you want to use libsl in your 
 own development.
